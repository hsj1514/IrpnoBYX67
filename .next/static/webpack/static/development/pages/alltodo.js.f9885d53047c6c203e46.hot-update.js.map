{"version":3,"file":"static/webpack/static\\development\\pages\\alltodo.js.f9885d53047c6c203e46.hot-update.js","sources":["webpack:///./components/onclick.js"],"sourcesContent":["const BoxStyle = {\r\n  width : '50px',\r\n  height : '50px',\r\n  backgroundColor: '#eee',\r\n}\r\n\r\nclass Onclick extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      /* set the initial checkboxState to true */\r\n      this.state = {\r\n        checkboxState: true,\r\n      }\r\n    }\r\n    /* prevent form submission from reloading the page */\r\n  onSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      const { checkboxState } = this.state;\r\n\r\n    //   axios.post('http://localhost:5000/add', { checkboxState })\r\n    // .then((result) => {\r\n    // });\r\n\r\n    }\r\n    /* callback to change the checkboxState to false when the checkbox is checked */\r\n  toggle(event) {\r\n    this.setState({\r\n      checkboxState: !this.state.checkboxState\r\n    });\r\n  }\r\n  render() {\r\n    const checkedOrNot = [];\r\n    checkedOrNot.push(\r\n      <p>{this.state.checkboxState ? '미완료' : '완료!'}</p>\r\n    );\r\n    const checkbox = (\r\n      <span>\r\n        <input\r\n        type=\"checkbox\"\r\n        style={BoxStyle}\r\n        onClick={this.toggle.bind(this)}\r\n        />\r\n        <label>Checkbox</label>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit.bind(this)}>\r\n          {checkbox}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        {checkedOrNot}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Onclick\r\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAHA;AAMA;AACA;AACA;AACA;;;AADA;AACA;AADA;AAMA;AACA;AAEA;AACA;AACA;;;AAAA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAlDA;AACA;AAoDA;;;;A","sourceRoot":""}