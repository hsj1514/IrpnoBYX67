{"version":3,"file":"static/webpack/static\\development\\pages\\seventodo.js.5bb1d21e73f440e0162e.hot-update.js","sources":["webpack:///./components/onclick.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst BoxStyle = {\r\n  width : '30px',\r\n  height : '30px',\r\n  marginBottom : '0',\r\n\r\n}\r\n\r\n\r\nclass Onclick extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        checkboxState: true,\r\n      }\r\n    }\r\n\r\n  toggle(event) {\r\n    this.setState({\r\n      checkboxState: !this.state.checkboxState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const checkedOrNot = [];\r\n    checkedOrNot.push(\r\n      <p style={{color : 'red',}} key={checkedOrNot}>{this.state.checkboxState ? '미완료' : '완료!'}</p>\r\n    );\r\n    const checkbox = (\r\n      <span>\r\n        <input\r\n        type=\"checkbox\"\r\n        style={BoxStyle}\r\n        onClick={this.toggle.bind(this)}\r\n        />\r\n\r\n      </span>\r\n    );\r\n\r\n    const id = this.props;\r\n\r\n//체크박스 체크하여 계획 완료 시, 해당 계획의 db checkboxState column의 값이 false로 전환됨\r\n    if(this.state.checkboxState === false){\r\n      console.log(id)\r\n      axios.post('http://localhost:5000/checkstate' , id)\r\n      .then((result) => {\r\n      });\r\n    }\r\n//체크박스 체크를 해제하여 계획 미완료 상태로 바꿀 시, 해당 계획의 db checkboxState column의 값이 true로 전환됨\r\n    if(this.state.checkboxState === true){\r\n      console.log(id)\r\n      axios.post('http://localhost:5000/uncheckstate' , id)\r\n      .then((result) => {\r\n      });\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <form >\r\n          {checkbox}\r\n\r\n\r\n        </form>\r\n        {checkedOrNot}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Onclick\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AAHA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA1DA;AACA;AA6DA;;;;A","sourceRoot":""}